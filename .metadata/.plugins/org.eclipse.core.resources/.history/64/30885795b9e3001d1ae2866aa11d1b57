package weekOneProblems;

import java.util.Arrays;

import org.junit.Test;

public class RemoveFirstNLastOccurinArray {
	
	/*
	 * get all the indices of the given integer
	 * if count of indices is more than two 
	 * 		create a subarray with size lenght -2 of input array
	 * 		copy all element except 1st and last indices of the matching number
	 * if count of indices is 2 
	 * 		create a subarray with size lenght -2 of input array
	 * 		copy all element except the two indices of the matching number
	 * 
	 * if count of indices is 1 
	 * 		create a subarray with size lenght -1 of input array
	 * 		copy all element except the one indices of the matching number
	 * 
	 * if count of indices is 0 
	 * 		return the input array
	 * if array is empty return empty array
	 * if array is null return null
	 */
	
	
	@Test
	public void Test1() {
		
		int [] input_array = {1,3,1,4,5,1,1};
		int input = 1;
		int [] output_E = {3,1,4,5,1};
		int [] output_A = removeFNLOccrurenceinArray(input_array , input );
		System.out.println(Arrays.toString(output_A));
		
	}

	private int[] removeFNLOccrurenceinArray(int[] input_array, int input) {
		// TODO Auto-generated method stub
		int [] index_array  = new int [input_array.length];
		
		for (int left = 0 ,  right =input_array.length-1 ; left <right ; left++ , right -- )
		{
			
			
			
			if (left == right) {
				
				if (input_array[left]==input) Arrays.fill(index_array, left) ;
					
					
				
			}
			
			else {
				if (input_array[left]==input) Arrays.fill(index_array, left) ;
				else if (input_array[right]==input) Arrays.fill(index_array, right) ;
			}
			
		}
		
		return index_array;
	}


}
